(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    378936,       7320]
NotebookOptionsPosition[    377227,       7274]
NotebookOutlinePosition[    377613,       7291]
CellTagsIndexPosition[    377570,       7288]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"IETwist", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", "P"}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "x", ",", "y", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Lambda]", 
          ",", "\[Gamma]", ",", "ztemp"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"z", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"y", "=", 
          RowBox[{"z", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", 
         RowBox[{"\[Alpha]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"\[Beta]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", 
         RowBox[{"\[Lambda]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", 
         RowBox[{"\[Gamma]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "\[LessEqual]", 
             "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "\[GreaterEqual]", 
             "0"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "-", "1"}], ",", "y"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "-", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], 
             "\[LessEqual]", "0"}]}], ",", 
           RowBox[{
            RowBox[{"ztemp", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"I", "*", "y"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{"\[Pi]", "-", 
                   RowBox[{"2", "\[Beta]"}], "-", "\[Alpha]"}], ")"}]}], 
                "]"}]}], "-", "\[Gamma]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", "ztemp", "]"}], ",", 
              RowBox[{"Im", "[", "ztemp", "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"y", " ", 
               RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
              RowBox[{"x", " ", 
               RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "\[GreaterEqual]", 
             "0"}]}], ",", 
           RowBox[{
            RowBox[{"ztemp", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "+", 
                 RowBox[{"I", "*", "y"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"I", "*", 
                 RowBox[{"(", 
                  RowBox[{"-", "\[Alpha]"}], ")"}]}], "]"}]}], "-", 
              "\[Gamma]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", "ztemp", "]"}], ",", 
              RowBox[{"Im", "[", "ztemp", "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"y", " ", 
              RowBox[{"Cos", "[", "\[Beta]", "]"}]}], "+", 
             RowBox[{"x", " ", 
              RowBox[{"Sin", "[", "\[Beta]", "]"}]}]}], "<", "0"}], ",", 
           RowBox[{
            RowBox[{"ztemp", "=", 
             RowBox[{"x", "+", 
              RowBox[{"I", "*", "y"}]}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"ztemp", "+", "\[Lambda]"}], "]"}], ",", 
              RowBox[{"Im", "[", 
               RowBox[{"ztemp", "+", "\[Lambda]"}], "]"}]}], "}"}]}]}], 
          "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InArea", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", "P", ",", "R", ",", "n"}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "ztemp", ",", "x0", ",", "x1", ",", "y0", ",", "y1", ",", "outl", 
          ",", "j"}], "}"}], ",", 
        RowBox[{
         RowBox[{"outl", "=", 
          RowBox[{"{", "}"}]}], ";", 
         RowBox[{"ztemp", "=", "z"}], ";", 
         RowBox[{"x0", "=", 
          RowBox[{"R", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"x1", "=", 
          RowBox[{"R", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
         RowBox[{"y0", "=", 
          RowBox[{"R", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", 
         RowBox[{"y1", "=", 
          RowBox[{"R", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", "n"}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x0", "\[LessEqual]", 
                RowBox[{"ztemp", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "x1"}], " ", 
               "&&", 
               RowBox[{"y0", "\[LessEqual]", 
                RowBox[{"ztemp", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "y1"}]}], 
              " ", ",", 
              RowBox[{
               RowBox[{"outl", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"outl", ",", "ztemp"}], "]"}]}], ";"}]}], "]"}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"ztemp", "=", 
             RowBox[{"IETwist", "[", 
              RowBox[{"ztemp", ",", "P"}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "outl"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pts", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "Npts"}], "}"}], ",", 
      RowBox[{"DeleteDuplicates", "@", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"j", "/", 
             RowBox[{"(", 
              RowBox[{"Npts", "+", "1"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", 
                RowBox[{"Npts", "+", "1"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"Npts", "+", "1"}], ")"}]}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"-", "Npts"}], ",", "0", ",", "1"}], "}"}]}], "]"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "0", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"j", "/", 
             RowBox[{"(", 
              RowBox[{"Npts", "+", "1"}], ")"}]}], "+", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"t", "/", 
               RowBox[{"(", 
                RowBox[{"Npts", "+", "1"}], ")"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"Npts", "+", "1"}], ")"}]}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "Npts", ",", "1"}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FazFilme", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "P", ",", "Npts", ",", "x0", ",", "T0", ",", "T", ",", 
        "nframes", ",", "tlag"}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Filme", ",", "tstep", ",", "\[Alpha]", ",", "\[Beta]", ",", 
          "\[Lambda]", ",", "\[Gamma]", ",", "PONTOS", ",", "t", ",", 
          "PONTOSt", ",", "lPONTOSt", ",", "j", ",", "Sombra", ",", "Fram", 
          ",", "factort", ",", "InareaPts", ",", "pixelsize", ",", "st1", ",",
           "st2", ",", "st3", ",", "tcount", ",", "ltcount", ",", "tstring", 
          ",", "framecount", ",", "lframecount", ",", "fstring", ",", "k", 
          ",", "LPt", ",", "prevfactort", ",", "PrevInareaPts", ",", "set", 
          ",", "numc", ",", "psetnewreg", ",", "newreg"}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Filme", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tstep", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"T", "-", "T0"}], ")"}], "/", "nframes"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"\[Beta]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", 
         RowBox[{"\[Lambda]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", 
         RowBox[{"\[Gamma]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"PONTOS", "=", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "LPts", "}"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "Ptstemp", ",", "Pto", ",", "TabelaL", ",", "lpts", ",", "c", 
                ",", "lc", ",", "ck"}], "}"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Ptstemp", "=", 
                 RowBox[{"Pts", "[", 
                  RowBox[{"tp", ",", "Npts"}], "]"}]}], ";"}], "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "Points", " ", "chosen", " ", "like", " ", "below", " ", 
                 "have", " ", "the", " ", "property", " ", "that", " ", 
                 "while", " ", "zooming", " ", "on", " ", "a", " ", "line", 
                 " ", "the", " ", "number", " ", "of", " ", "pts", " ", 
                 "remains", " ", "constant", " ", "and", " ", 
                 "proportionately", " ", 
                 RowBox[{"spaced", ".", " ", "These"}], " ", "points", " ", 
                 "are", " ", "chosen", " ", "on", " ", "the", " ", "middle", 
                 " ", "discontinuity", " ", 
                 RowBox[{"line", ".", " ", "c"}], " ", "is", " ", "a", " ", 
                 "parameter", " ", "that", " ", "also", " ", "controls", " ", 
                 "the", " ", "number", " ", "of", " ", "points", " ", "that", 
                 " ", 
                 RowBox[{"appear", ".", " ", "For"}], " ", "each", " ", 
                 "choice", " ", "of", " ", "c", " ", "there", " ", "are", " ",
                  "2", "Npts"}], "+", 
                RowBox[{
                "2", " ", "pts", " ", "making", " ", "a", " ", "total", " ", 
                 "of", " ", "#ofcs", "*", "2", "*", 
                 RowBox[{"(", 
                  RowBox[{"Npts", "+", "1"}], ")"}]}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"pts", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"c", "=", 
                RowBox[{"{", 
                 RowBox[{"1.25", ",", "1.75"}], "}"}]}], ";", 
               RowBox[{"lc", "=", 
                RowBox[{"Length", "[", "c", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Ptstemp", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", "0", "}"}], ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"c", "[", 
                    RowBox[{"[", "ck", "]"}], "]"}]}], "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "j"}], "-", 
                    RowBox[{"Npts", "*", 
                    RowBox[{"LPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", "j", "+", "1", "+", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ck", "\[Equal]", "1"}], ",", "0", ",", "ck"}], 
                    "]"}], "*", "Npts"}]}], "]"}], "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{"Npts", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "ck", "]"}], "]"}], "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "j"}], "-", 
                    RowBox[{"Npts", "*", 
                    RowBox[{"LPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", "j", "+", "1", "+", "Npts", "+", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ck", "\[Equal]", "1"}], ",", "0", ",", "ck"}], 
                    "]"}], "*", "Npts"}]}], "]"}], "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{"Npts", "-", "1"}]}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ck", ",", "1", ",", "lc"}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"lpts", "=", 
                RowBox[{"Length", "[", "Ptstemp", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Pto", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "1", ",", "lpts"}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"TabelaL", "=", 
                RowBox[{"Pto", "+", 
                 RowBox[{"(", 
                  RowBox[{"Pto", "*", "Ptstemp"}], ")"}]}]}], ";", 
               "\[IndentingNewLine]", "TabelaL"}]}], "\[IndentingNewLine]", 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"st1", "=", "\"\<0\>\""}], ";", 
         RowBox[{"st2", "=", "\"\<00\>\""}], ";", 
         RowBox[{"st3", "=", "\"\<000\>\""}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "This", " ", "is", " ", "the", " ", "part", " ", "that", " ", 
           "actually", " ", "does", " ", "the", " ", "movie"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"numc", "=", "2"}], ";", "\[IndentingNewLine]", 
         RowBox[{"LPt", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"1", "+", 
               RowBox[{"numc", "*", "2", "*", 
                RowBox[{"(", "Npts", ")"}]}]}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PONTOSt", "=", 
          RowBox[{"PONTOS", "[", "LPt", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lPONTOSt", "=", 
          RowBox[{"Length", "@", "PONTOSt"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"prevfactort", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"3", "+", "tlag"}], ")"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Max", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tlag", "-", "T0"}], ",", "0"}], "}"}], "]"}]}], 
               ")"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"Max", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"T0", "-", "tlag"}], ",", "0"}], "}"}], "]"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"PrevInareaPts", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"InArea", "[", 
             RowBox[{
              RowBox[{"PONTOSt", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "P", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                   "]"}], ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                   "]"}]}], "}"}]}], "}"}], ",", "prevfactort"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "lPONTOSt"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "T0"}], ",", 
           RowBox[{"t", "<", "T"}], ",", 
           RowBox[{"t", "+=", "tstep"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tcount", "=", 
             RowBox[{"Floor", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ltcount", "=", 
             RowBox[{"Length", "@", 
              RowBox[{"IntegerDigits", "@", "tcount"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"ltcount", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st3", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st2", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "3"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st1", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "4"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"ToString", "[", "tcount", "]"}]}], ";"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"framecount", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", 
                 RowBox[{"Floor", "[", "t", "]"}]}], ")"}], "/", "tstep"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lframecount", "=", 
             RowBox[{"Length", "@", 
              RowBox[{"IntegerDigits", "@", "framecount"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"lframecount", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st3", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",", 
              RowBox[{"lframecount", "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st2", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",", 
              RowBox[{"lframecount", "\[Equal]", "3"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st1", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",",
               "lframecount", ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"ToString", "[", "framecount", "]"}]}], ";"}]}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "factort", " ", "gives", " ", "the", " ", "number", " ", "of", 
              " ", "iterates", " ", "at", " ", "time", " ", "t"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"factort", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "+", "tlag"}], ")"}]}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tlag", "-", "t"}], ",", "0"}], "}"}], "]"}]}], 
                  ")"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"Max", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"t", "+", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1.2", ",", 
                    RowBox[{"0.2", "t"}]}], "]"}], "-", "tlag"}], ",", "0"}], 
                  "}"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"InareaPts", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "lPONTOSt"}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"psetnewreg", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "\[LessEqual]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     " ", "&&", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], "\[LessEqual]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}]}], " ", ")"}], "&"}]}], "]"}]}], ";"}], 
               "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"newreg", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"InArea", "[", 
                   RowBox[{
                    RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "P", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"factort", "-", "prevfactort"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"set", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"newreg", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"{", "}"}], ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "newreg"}], "]"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"set", "\[Equal]", 
                  RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"LPt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"LPt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "+", "1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PONTOSt", "=", 
                   RowBox[{"PONTOS", "[", "LPt", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"lPONTOSt", "=", 
                   RowBox[{"Length", "@", "PONTOSt"}]}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"set", "=", 
                   RowBox[{"InArea", "[", 
                    RowBox[{
                    RowBox[{"PONTOSt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "P", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}], ",", "factort"}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"InareaPts", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"InareaPts", ",", "set"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Sombra", " ", "gives", " ", "a", " ", "shadow", " ", "to", " ",
                "the", " ", "Fram", " ", "points", " ", "to", " ", "make", 
               " ", "the", " ", "result", " ", "look", " ", "prettier"}], 
              "..."}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"pixelsize", "=", "700"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Sombra", "=", 
             RowBox[{"Blur", "[", 
              RowBox[{
               RowBox[{"ListPlot", "[", 
                RowBox[{"InareaPts", ",", "\[IndentingNewLine]", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}]}], ",", 
                 RowBox[{"PlotStyle", "->", 
                  RowBox[{"PointSize", "[", 
                   RowBox[{"5", "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "3"}]}]}], "]"}]}], ",", 
                 RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}], 
               ",", "7"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Fram", "=", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"InareaPts", ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "->", 
                RowBox[{"PointSize", "[", 
                 RowBox[{"1.05", "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"-", "6"}]}]}], "]"}]}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Background", "\[Rule]", "White"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Export", "[", 
               RowBox[{
                RowBox[{
                "\"\<U:\\\\PWIZoomframes2\\\\frame\>\"", "<>", "tstring", "<>",
                  "fstring", "<>", "\"\<.png\>\""}], ",", 
                RowBox[{"ImageMultiply", "[", 
                 RowBox[{"Fram", ",", "Sombra"}], "]"}]}], "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Filme", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"Filme", ",", 
               RowBox[{"ImageMultiply", "[", 
                RowBox[{"Fram", ",", "Sombra"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"prevfactort", "=", "factort"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PrevInareaPts", "=", "InareaPts"}], ";"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "Filme"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FilmeExp1", "=", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "x", ",", "P", ",", "Npts", ",", "x0", ",", "T0", ",", "T", ",", 
        "nframes", ",", "tlag"}], "}"}], ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "tstep", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Lambda]", ",", 
          "\[Gamma]", ",", "PONTOS", ",", "t", ",", "PONTOSt", ",", 
          "lPONTOSt", ",", "j", ",", "Sombra", ",", "Fram", ",", "factort", 
          ",", "InareaPts", ",", "pixelsize", ",", "st1", ",", "st2", ",", 
          "st3", ",", "tcount", ",", "ltcount", ",", "tstring", ",", 
          "framecount", ",", "lframecount", ",", "fstring", ",", "k", ",", 
          "LPt", ",", "prevfactort", ",", "PrevInareaPts", ",", "set", ",", 
          "numc", ",", "psetnewreg", ",", "newreg"}], "}"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tstep", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"T", "-", "T0"}], ")"}], "/", "nframes"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Alpha]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", 
         RowBox[{"\[Beta]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", 
         RowBox[{"\[Lambda]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", 
         RowBox[{"\[Gamma]", "=", 
          RowBox[{"P", "[", 
           RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"PONTOS", "=", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "LPts", "}"}], ",", 
            RowBox[{"Module", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "Ptstemp", ",", "Pto", ",", "TabelaL", ",", "lpts", ",", "c", 
                ",", "lc", ",", "ck"}], "}"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Ptstemp", "=", 
                 RowBox[{"Pts", "[", 
                  RowBox[{"tp", ",", "Npts"}], "]"}]}], ";"}], "*)"}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "Points", " ", "chosen", " ", "like", " ", "below", " ", 
                 "have", " ", "the", " ", "property", " ", "that", " ", 
                 "while", " ", "zooming", " ", "on", " ", "a", " ", "line", 
                 " ", "the", " ", "number", " ", "of", " ", "pts", " ", 
                 "remains", " ", "constant", " ", "and", " ", 
                 "proportionately", " ", 
                 RowBox[{"spaced", ".", " ", "These"}], " ", "points", " ", 
                 "are", " ", "chosen", " ", "on", " ", "the", " ", "middle", 
                 " ", "discontinuity", " ", 
                 RowBox[{"line", ".", " ", "c"}], " ", "is", " ", "a", " ", 
                 "parameter", " ", "that", " ", "also", " ", "controls", " ", 
                 "the", " ", "number", " ", "of", " ", "points", " ", "that", 
                 " ", 
                 RowBox[{"appear", ".", " ", "For"}], " ", "each", " ", 
                 "choice", " ", "of", " ", "c", " ", "there", " ", "are", " ",
                  "2", "Npts"}], "+", 
                RowBox[{
                "2", " ", "pts", " ", "making", " ", "a", " ", "total", " ", 
                 "of", " ", "#ofcs", "*", "2", "*", 
                 RowBox[{"(", 
                  RowBox[{"Npts", "+", "1"}], ")"}]}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"pts", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"c", "=", 
                RowBox[{"{", 
                 RowBox[{"1.25", ",", "1.75"}], "}"}]}], ";", 
               RowBox[{"lc", "=", 
                RowBox[{"Length", "[", "c", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Ptstemp", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", "0", "}"}], ",", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"c", "[", 
                    RowBox[{"[", "ck", "]"}], "]"}]}], "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "j"}], "-", 
                    RowBox[{"Npts", "*", 
                    RowBox[{"LPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", "j", "+", "1", "+", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ck", "\[Equal]", "1"}], ",", "0", ",", "ck"}], 
                    "]"}], "*", "Npts"}]}], "]"}], "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{"Npts", "-", "1"}]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"c", "[", 
                    RowBox[{"[", "ck", "]"}], "]"}], "*", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "j"}], "-", 
                    RowBox[{"Npts", "*", 
                    RowBox[{"LPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", "+", "j", "+", "1", "+", "Npts", "+", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ck", "\[Equal]", "1"}], ",", "0", ",", "ck"}], 
                    "]"}], "*", "Npts"}]}], "]"}], "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "0", ",", 
                    RowBox[{"Npts", "-", "1"}]}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ck", ",", "1", ",", "lc"}], "}"}]}], "]"}], ",", 
                    "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"lpts", "=", 
                RowBox[{"Length", "[", "Ptstemp", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"Pto", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"x", ",", 
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "1", ",", "lpts"}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"TabelaL", "=", 
                RowBox[{"Pto", "+", 
                 RowBox[{"(", 
                  RowBox[{"Pto", "*", "Ptstemp"}], ")"}]}]}], ";", 
               "\[IndentingNewLine]", "TabelaL"}]}], "\[IndentingNewLine]", 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"st1", "=", "\"\<0\>\""}], ";", 
         RowBox[{"st2", "=", "\"\<00\>\""}], ";", 
         RowBox[{"st3", "=", "\"\<000\>\""}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "This", " ", "is", " ", "the", " ", "part", " ", "that", " ", 
           "actually", " ", "does", " ", "the", " ", "movie"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"numc", "=", "2"}], ";", "\[IndentingNewLine]", 
         RowBox[{"LPt", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", 
              RowBox[{"1", "+", 
               RowBox[{"numc", "*", "2", "*", 
                RowBox[{"(", "Npts", ")"}]}]}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PONTOSt", "=", 
          RowBox[{"PONTOS", "[", "LPt", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"lPONTOSt", "=", 
          RowBox[{"Length", "@", "PONTOSt"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"prevfactort", "=", 
          RowBox[{"IntegerPart", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"3", "+", "tlag"}], ")"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Max", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"tlag", "-", "T0"}], ",", "0"}], "}"}], "]"}]}], 
               ")"}]}], ")"}], "*", 
            RowBox[{"Exp", "[", 
             RowBox[{"Max", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"T0", "-", "tlag"}], ",", "0"}], "}"}], "]"}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"PrevInareaPts", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"InArea", "[", 
             RowBox[{
              RowBox[{"PONTOSt", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", "P", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                  "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                   "]"}], ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "T0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                   "]"}]}], "}"}]}], "}"}], ",", "prevfactort"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "lPONTOSt"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"t", "=", "T0"}], ",", 
           RowBox[{"t", "<", "T"}], ",", 
           RowBox[{"t", "+=", "tstep"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tcount", "=", 
             RowBox[{"Floor", "[", "t", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ltcount", "=", 
             RowBox[{"Length", "@", 
              RowBox[{"IntegerDigits", "@", "tcount"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"ltcount", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st3", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st2", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "3"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"st1", "<>", 
                 RowBox[{"ToString", "[", "tcount", "]"}]}]}], ";"}], ",", 
              RowBox[{"ltcount", "\[Equal]", "4"}], ",", 
              RowBox[{
               RowBox[{"tstring", "=", 
                RowBox[{"ToString", "[", "tcount", "]"}]}], ";"}]}], "]"}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"framecount", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"t", "-", 
                 RowBox[{"Floor", "[", "t", "]"}]}], ")"}], "/", "tstep"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"lframecount", "=", 
             RowBox[{"Length", "@", 
              RowBox[{"IntegerDigits", "@", "framecount"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", 
             RowBox[{
              RowBox[{"lframecount", "\[Equal]", "1"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st3", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",", 
              RowBox[{"lframecount", "\[Equal]", "2"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st2", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",", 
              RowBox[{"lframecount", "\[Equal]", "3"}], ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"st1", "<>", 
                 RowBox[{"ToString", "[", "framecount", "]"}]}]}], ";"}], ",",
               "lframecount", ",", 
              RowBox[{
               RowBox[{"fstring", "=", 
                RowBox[{"ToString", "[", "framecount", "]"}]}], ";"}]}], 
             "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "factort", " ", "gives", " ", "the", " ", "number", " ", "of", 
              " ", "iterates", " ", "at", " ", "time", " ", "t"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"factort", "=", 
             RowBox[{"IntegerPart", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"3", "+", "tlag"}], ")"}]}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"10", "^", 
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tlag", "-", "t"}], ",", "0"}], "}"}], "]"}]}], 
                  ")"}]}], ")"}], "*", 
               RowBox[{"Exp", "[", 
                RowBox[{"Max", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"t", "+", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1.2", ",", 
                    RowBox[{"0.2", "t"}]}], "]"}], "-", "tlag"}], ",", "0"}], 
                  "}"}], "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"InareaPts", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "lPONTOSt"}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"psetnewreg", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], "\[LessEqual]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     " ", "&&", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], "\[LessEqual]", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", " ", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}]}], " ", ")"}], "&"}]}], "]"}]}], ";"}], 
               "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"newreg", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "\[NotEqual]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"InArea", "[", 
                   RowBox[{
                    RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "P", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"factort", "-", "prevfactort"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"set", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"newreg", "\[Equal]", 
                   RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"{", "}"}], ",", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"PrevInareaPts", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "newreg"}], "]"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{"set", "\[Equal]", 
                  RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"LPt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"LPt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "+", "1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"PONTOSt", "=", 
                   RowBox[{"PONTOS", "[", "LPt", "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"lPONTOSt", "=", 
                   RowBox[{"Length", "@", "PONTOSt"}]}], ";", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"set", "=", 
                   RowBox[{"InArea", "[", 
                    RowBox[{
                    RowBox[{"PONTOSt", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], ",", "P", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}], ",", "factort"}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"InareaPts", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"InareaPts", ",", "set"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Sombra", " ", "gives", " ", "a", " ", "shadow", " ", "to", " ",
                "the", " ", "Fram", " ", "points", " ", "to", " ", "make", 
               " ", "the", " ", "result", " ", "look", " ", "prettier"}], 
              "..."}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"pixelsize", "=", "700"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Sombra", "=", 
             RowBox[{"Blur", "[", 
              RowBox[{
               RowBox[{"ListPlot", "[", 
                RowBox[{"InareaPts", ",", "\[IndentingNewLine]", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}]}], ",", 
                 RowBox[{"PlotStyle", "->", 
                  RowBox[{"PointSize", "[", 
                   RowBox[{"5", "*", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "3"}]}]}], "]"}]}], ",", 
                 RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                 RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
                 RowBox[{"Background", "\[Rule]", "White"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}], 
               ",", "7"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"Fram", "=", 
             RowBox[{"ListPlot", "[", 
              RowBox[{"InareaPts", ",", "\[IndentingNewLine]", 
               RowBox[{"PlotRange", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"x", "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                    "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                    "]"}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "t"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                    "]"}]}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotStyle", "->", 
                RowBox[{"PointSize", "[", 
                 RowBox[{"1.05", "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"-", "6"}]}]}], "]"}]}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Background", "\[Rule]", "White"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"Export", "[", 
             RowBox[{
              RowBox[{
              "\"\<U:\\\\PWIZoomframes2\\\\frame\>\"", "<>", "tstring", "<>", 
               "fstring", "<>", "\"\<.png\>\""}], ",", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"Fram", ",", "Sombra"}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"prevfactort", "=", "factort"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"PrevInareaPts", "=", "InareaPts"}], ";"}]}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.687437028462351*^9, 3.6874373668654547`*^9}, 
   3.7373571701647587`*^9, {3.737360340727311*^9, 3.737360369309311*^9}, {
   3.737360491800311*^9, 3.737360658603311*^9}, {3.737360707687311*^9, 
   3.737360709237311*^9}, {3.737361034882311*^9, 3.737361036372311*^9}, {
   3.73736202712022*^9, 3.7373620578926086`*^9}, {3.7373700345919013`*^9, 
   3.7373700503479013`*^9}, {3.737370106562701*^9, 3.737370143368101*^9}, {
   3.7373704194799013`*^9, 3.7373704240039015`*^9}, 3.7373704706479015`*^9, {
   3.737370658679901*^9, 3.737370670691901*^9}, {3.737370786457101*^9, 
   3.7373708111709013`*^9}, {3.737370841220301*^9, 3.737370860314701*^9}, 
   3.737370920303501*^9, {3.7373711690025015`*^9, 3.737371210222701*^9}, {
   3.737371286402501*^9, 3.737371310488901*^9}, {3.737371418291901*^9, 
   3.7373714994939013`*^9}, {3.737371978767301*^9, 3.7373719790013013`*^9}, {
   3.737373911045001*^9, 3.737373915397401*^9}, {3.737374075581543*^9, 
   3.737374078638986*^9}, {3.7373743672676544`*^9, 3.7373743847122307`*^9}, {
   3.73737448344957*^9, 3.737374495650614*^9}, {3.7373745985355725`*^9, 
   3.7373745998615637`*^9}, {3.7373746854310155`*^9, 3.73737470808407*^9}, {
   3.737374780428807*^9, 3.737374796578703*^9}, {3.737374938999913*^9, 
   3.737375035489113*^9}, {3.737375227885113*^9, 3.737375235872313*^9}, {
   3.737375325486713*^9, 3.737375326126313*^9}, {3.7373754443939133`*^9, 
   3.737375444596713*^9}, {3.7374325753237915`*^9, 3.7374327887804937`*^9}, {
   3.737432866594306*^9, 3.7374328853327045`*^9}, {3.7374329283870974`*^9, 
   3.7374329310702286`*^9}, {3.737432968900259*^9, 3.7374329735801387`*^9}, {
   3.7374330205837336`*^9, 3.7374330216289067`*^9}, {3.7374331121923203`*^9, 
   3.7374331207419014`*^9}, {3.7374332994772577`*^9, 3.737433303720431*^9}, {
   3.7374333513024187`*^9, 3.737433354203889*^9}, {3.7374334447056303`*^9, 
   3.737433452430684*^9}, {3.7374334882676773`*^9, 3.7374334912471437`*^9}, {
   3.7374335537885385`*^9, 3.7374335585931225`*^9}, {3.7374335908106775`*^9, 
   3.7374335963504286`*^9}, {3.7374336515924826`*^9, 3.737433652185275*^9}, {
   3.7374336864816356`*^9, 3.737433698509081*^9}, {3.737434018928395*^9, 
   3.737434019224793*^9}, {3.73743414448239*^9, 3.73743414452919*^9}, {
   3.7374358176390452`*^9, 3.7374358311019316`*^9}, {3.7374359370034113`*^9, 
   3.7374359376898155`*^9}, {3.7374361180792265`*^9, 
   3.7374361181416264`*^9}, {3.73743654419707*^9, 3.7374365872854414`*^9}, {
   3.737436908039196*^9, 3.7374369269004755`*^9}, {3.737437012876524*^9, 
   3.7374372221575828`*^9}, {3.737437364463812*^9, 3.7374374112406116`*^9}, {
   3.737437458370679*^9, 3.7374376594709454`*^9}, {3.7374382252863684`*^9, 
   3.7374382586575546`*^9}, {3.737438297268307*^9, 3.7374382991246953`*^9}, {
   3.737438347704971*^9, 3.7374383522289705`*^9}, {3.737438386722571*^9, 
   3.7374383934773707`*^9}, {3.7374389037065988`*^9, 3.737438914596469*^9}, {
   3.7374396979924307`*^9, 3.7374397385553107`*^9}, {3.7374398395787525`*^9, 
   3.7374398602331524`*^9}, {3.7374398993473525`*^9, 
   3.7374399899691525`*^9}, {3.737440020970352*^9, 3.737440055888152*^9}, {
   3.7374401201671524`*^9, 3.7374401456927524`*^9}, {3.7374401793771524`*^9, 
   3.7374401903127527`*^9}, {3.7374403234111524`*^9, 
   3.7374403583571525`*^9}, {3.737440399089752*^9, 3.737440412273752*^9}, {
   3.737440466157152*^9, 3.7374404690607524`*^9}, {3.737440518994876*^9, 
   3.7374405191040697`*^9}, 3.7374405902493663`*^9, {3.7374407982540245`*^9, 
   3.7374408232915435`*^9}, {3.737440854022952*^9, 3.7374408603418307`*^9}, {
   3.7374408984080987`*^9, 3.737440909469286*^9}, {3.737440961579284*^9, 
   3.7374409689267426`*^9}, 3.7374410199301624`*^9, {3.7374413321522417`*^9, 
   3.73744150343176*^9}, {3.7374415339800615`*^9, 3.7374415404694953`*^9}, {
   3.737441664385914*^9, 3.737441665462286*^9}, 3.737441985593463*^9, {
   3.7374421096874785`*^9, 3.7374422303508167`*^9}, {3.7374425010368166`*^9, 
   3.737442502752816*^9}, 3.737442837829546*^9, {3.737442891279146*^9, 
   3.7374428977883463`*^9}, {3.737443974597546*^9, 3.737443978219746*^9}, 
   3.737444473957246*^9, {3.7374458573756003`*^9, 3.7374458665328007`*^9}, {
   3.7374461746074004`*^9, 3.7374462604048004`*^9}, {3.7374463152282004`*^9, 
   3.7374463650470004`*^9}, 3.737446913624756*^9, 3.7374568589054356`*^9, {
   3.737788355439619*^9, 3.7377883623356867`*^9}, {3.737788426357856*^9, 
   3.737788501492011*^9}, {3.7377885323971863`*^9, 3.737788540618333*^9}, {
   3.737788584128454*^9, 
   3.7377885897132187`*^9}},ExpressionUUID->"f58e6b33-12f3-4aa2-96e1-\
a65adc95a7b3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.5"}], ";", 
  RowBox[{"\[Beta]", "=", "1"}], ";", 
  RowBox[{"\[Lambda]", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", "5", "]"}], "-", "1."}], ")"}], "/", "2"}]}], ";", 
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"\[Lambda]", "^", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "0.034"}], ";", 
  RowBox[{"P", "=", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Lambda]", ",", "\[Gamma]"}], 
    "}"}]}], ";", 
  RowBox[{"Npts", "=", "6"}], ";", 
  RowBox[{"x0", "=", "1.1"}], ";", 
  RowBox[{"T0", "=", "0"}], ";", 
  RowBox[{"T", "=", "1"}], ";", 
  RowBox[{"nframes", "=", "1"}], ";", 
  RowBox[{"tlag", "=", "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"Imag", "=", 
  RowBox[{
   RowBox[{"FazFilme", "[", 
    RowBox[{
    "x", ",", "P", ",", "Npts", ",", "x0", ",", "T0", ",", "T", ",", 
     "nframes", ",", "tlag"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.737456612813636*^9, 3.7374566809798355`*^9}, {
  3.737788646111657*^9, 
  3.7377886668001246`*^9}},ExpressionUUID->"fbe1aa88-5cb3-4339-bda5-\
b05c5e934ab3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.737456661970236*^9, 3.737456683351036*^9}, 
   3.737456869263836*^9, 
   3.737788702012099*^9},ExpressionUUID->"50d5c0da-15d4-4b17-b2f4-\
8acbbdd1c947"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvWebW1W2tqvrPV/Ox/MXzr84H7obcCqXygY67Ma8u9/e3TTGrrLBoZwr
mNAEG0NjQxO6G2iiyRlcOUhL0lLOOeecpco2Z8y5JJWqbNih995g7+e+Jlyy
tJZSuTzvNcaYY/6/9x36xQP/SyaTDf7f9L9f/P7kHUeP/v70L/8f+sM/PTTY
v++hvff3PnRs7769R/+/+/4vunPqf0n/sdvfAgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAPifxzVpXGPj6rVr3WONxlU+Nt5PQzpeOhcAAAAAtww3FIOW
D1y9tkpj7eoKH8urrbF03eg8JB1Jp6xeXX8S6AQAAABw09ExhG434GJwrVsM
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
cJOyqXSBr4lYYVWO3BaSxUI0myJb8EQ9jqDZ6lWbXdNG+5dGy3sG42tsxSLL
QdxvUZ20CYccyn10eT58VFKFuyLKvrhyZ1LYnha2ZVVbc+otBfXWomZrSdxW
FrdXtD1V7U6axGu6XTXdnbWXZNKovsSnfmnof1s1/K5iuK+iv7+s31vSP1DS
PVDUPlAQ2ciLrRs06M6Sbl9Z/wCNimFvxfCHquH3VcO/dJ6q1j30d5NI1PQk
ElIsorflDzzckVX3pFX0tntjwq6w8i4mDxdl7ots1YZNecAiHDWpzhg1j8mH
H5KPHjcaXzdZ3jc7vrS6pxx+tTtk8knmIMUcquUSr5BsLi8vrawi4AAAAOAm
5fpkRHOZtWYqNZq5ajVVKsZy6WAq4o15HUGL1asxOacNti/05vfko0PykcG+
oQGTesSiOmYXDjj5JTmpQpBFFTqqsDWr2pJX31FU31HSbKmIW6vi9qp2R027
s6bra0kCn8RZAEH3m4rut2Xd70u6+0kAitr+gvZgXncorzua0x3LaU9ktScz
4qm05nRKczqpPpVUdQ31KbozLZ7OiKez2lM53cmc7nheN5jXHSnoHiroDhR1
+0u6vWXdHyr631fIQzYrxF01Fojoq7JARw/LYmi253kJRFrVkxB6o8pdIeXd
fsWvvBdlrosyxyWZVXjQojpuUp/tGz7QNzJoNL5qslw22z+3uibtPpVkDuEU
y1akS/lCtVJpNuqLSwvLK1iSCQAA4KaDZqvuZIRUulBuLuRr9XSpFM9nQ+mY
N+5zhmxWn2hyzRhsX+pMZAtnWGR+qN+oGrIIR+zK/TSH0kwauCgLK3fHlL0d
VSiQKmjuKEuqoN1W0/bUtL2dYIIUT2hJgnZvQduf1x7MiYez4mBGc4KLwXBS
czapeSyheTyueSqmOR9VPx1RXQgLF0LKC0HF0xuG8kJIuBBWXYioL0Q1F2Ka
p+PiuYT4ZFL8Y1J8JKUZTWmG0uKprHg8pz2a1x4q6A6WdP1l/d6K/r7qJoXQ
7a7p5FWWKNlRFln2JK/enlXtSKl64kJvRLkrqLx75Cir0GCrLZQDVuGoWT3c
N9zPVpKOnjGa3zWROfCYgydsDsQ9kXQkWUhny8VivXajVAW0AQAAwI+aDeGF
lbUGT0YU641MuZIo5MKZhC8RcIUdNr/O7Joz2L7WmT/oHR3uHR4kWzAIQ2bl
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
gkvlcgLHI4VCMJ8P5PKBfD6cL8byeCqP53J4IYsX08ViIp+PZtLBZNwXC7nD
HkfAZvUazG6l0SHSW7t05oda420BPJxXq09Vt22sbltb3boSTsca6U6tpEUn
3qwXrzOKVkG/3iJaZD2Cpm9nhfNBQBH+Y1hAOiUknRKWTYnIpsTkk+PySQlF
U0rRKKCI+qyyLqucACWjrEMgQdGYkE+My5uisklh2eSQdHJAMhlepBJGcAkX
twuLDlbRArNosUm03CgexAkaSRuqgGhZUd26tqptE8pVUF9Qaq+p9AJUsHbr
7SKjS2n26Kw+k81vtQftzqDdFbJ7wjZ/xBaO2eJJZzrjLRRCpVKCJLOogAhp
B05DDPZ3oiCXq4jLDcQVqCALyburyYdbqG/bqM5dVMeH1Le7yIdt5L0t5Ztr
/L/9iffXP4JTeWoVBgED/Bn/voJseKYg4/7RFCR2mYlepMLnqPCXiMYhcpmK
36URjYMalJyo9pwtoOZ9Q8xOQ+MHPfjvWkMIvSFopoxC0+UUXowU8r581lnI
2opZWynvIIseuhxiyARK2WLyiAWFztJEjMK9ZN5EZmRkspOM36Oi12k4PUUv
sNELUBOR0xS/ysev8LELfPQ0HzrC+z/iPS28cy13AeO+wsBXGGuehnjyDVNZ
3SRW3QC1npWMZQdGsp8JfHGHMVY0AUgns/KZrGIOK5/DSGbQvZMFbudxwddf
8P/6hdKZMfjpavxMQ+mrZv9vf1S+sbj8AUbcXRN86/8lbq+DxrB8dQV+YbHn
Vz9y/fvLyB7+bHhg7yTXrinmlmbNlhnSTbP6Nsxu3zBr4yuvr3/l17e2No4e
MXJeFTavGsn199+58f7b82qwynbwxdaq0SPeu7Vt0rpXf7vxlTfaN87t3ThX
ummOZsssc8s0587J2leHR5ehaEb2ZLPn1z/CLy4pX19N3N5E3NtGfNNCfLOd
gFb663UQxpQuzMO/bMZPN+BnquBnCfz2BWIXRn2E0V2NzEAzK52JPrh8Gitt
YsS1zGGMPoxRn2GfrsdI8UhSNpZU1lCaelrXyBiaDrVi7JcYsMzkbAs55xrO
sx35U4EDIHSEDR1noASP0Ug+h+CBjl1jUo/YnBgUDWzJxRAhmoiS5WgZD+J5
byHnbD56I591wZ8BSuErJUvlXInAcZIoEmSuTKTxUiJfiGYzoVTCF494on5n
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
syX+VVriFr9xZRmRxZlzQoJQyhdICBdDfe4y2RpPTPrJqak+61f3r7q8oOZ2
ct291fVP0xpfZjdWbGusyG94lVf3IrP68ebKe6te3U25uqzv0g0DS87PT1o9
IH7FgNgVAxYuh0w4+eixhEPHFhUcX773+Ko5Kz6bvfKzGV+H7v1mc+jGz4/d
2bow62fR0Yklbw48qTn5inWhsunKe961yqarFayLT2vOlL45Eh2dHJ39v47f
zQ7d9K9fzw6f8XXYnJWfw+PsO7664PiKQ8eWHD2WBLlx4bKBMcvReZNWDSg+
N3fJ+gFXlvYtv5PwtmxZ1aP1dc/TG1/lsl7ns15vb3yV1/B8a93DDTXFy1bO
m7J+7YBTUz8+MdmnbFQf6EldDvMpCftoCdIMI4uyZpRmhKb5jX6RFvcuLZaV
vrAlO4I91FfIUKIcaoZ7qZ6KfUTjZVL0FCgaKAP0obrg2OQlcS9FekkP7bHR
Di1tElOaaqqtDLScBtx8Tci/QkpkMhDGwSdLC1bSoo2QEtGCVOtmJBugKuDH
QMFwNAsD3FCU+bMpCvBjAD+OEsRSghi0ZgFfhbFUc2L3Jk20m0C8nhRvJMQb
cWjXMI94My7Zgl/HCFk+2bYPjdHKU6jKsOYKyhmluYzeK88AxTG0K6FtD5Dv
IOXbyZvYh5AJ6Pi376Ha9/bYHtC2C7TtAPLtyOAXbmEAagx4WMUJAI8DdQWS
Fmfhj1ASkG17CNk2QpqJ+iBJY4zpjDQLGinNRqkvpRloYymUPeLVlGgZ2j6J
ki0kE9AEyTg/EefF4dyFOCecYM89nMmscTdFUPw4VGcZSix4r5Co3gBv4D88
QI7/iQDhIoA8qTn9HUDu/G0BEvsXAggNASKE4jDVK8tBMwxtuxmDjtU+FPfV
eYZW3aC7HtPGatoq9DoVXtzkJV3o4HRvVENv+wdvNBP6CHAv4aDdetoup00c
uquCVhTRbedoaSGK8JHk0q25Xuk2RjPs8MryaEkGLVxHcZdQDfEoqVp1AqhZ
STZkAd5RILnDUKKQtqlot8X7gRJxRIkOPWVqo1Rs0Pqc5FzFKwvdj7bYby0x
p2JdazDOMF9xXiQ3M6YqPSHLb3ya37gZU2ZOD5wKKXHJbOxevj+khWLkQzGT
riv6rZw9tvZWUv39tawXWdzKvbyaI/z6k/yGU7y6E5zqQ/Vvd79/kfXq0YYn
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
7uyBhisnCuX2apn/UQP1+4I3kiibG6LjIyENJLHSz6HJB93la9f8tUjXN8Iz
kaaL8earV2027jozss+xSnHsBqCKWRD5KdT7kjsA3FHJHargDhRD9FyI9IDT
fpVdd5FV6scscGdk2wI/Am9OHBdiXBK4u9KOse3uGntmhRUjFrh7/4TiPsZT
OeYTKeZTyanjH04p74USENw0BK/diEe0hh9a73Xn93mCVx4dw6XYguaYcxPB
6dRj43XZeH12pyGny4hDMIKIRlyS0ZvJo+D5o0wFvRMWwEDYsNNBYcUm27C6
7ZgkOybRhkmwYHUapwQh2NcQnGuCmEEwBBEiWnK6BcsOwmYPByTdcKwCWn94
5gSKCQ9EJtsnfztKAUQs3VZckgVENIO6jKFOfahTGxJ0KfNIhjyyOZ9mx+8B
38WV3+PKoznySFbcDkO4myURDhhAtMB8Ks54hGQ8kh5X+Gj8+P6dGrNl1KB3
ALF6BxBjGJAcASCV3wMCAUCGqmFAhqr+tYDk7QBCac/4fxCQvO8BQTf5ogn/
VkDqMEzg9EpbZhxiQlkYCCYj24qZ68R8eY5VHs5uBL5+CvVVcCc6eYsD/PUZ
kKOBTA0eRbbb1bBb/lPKm4cr2X+BR/sswlMtzVO5Y00QvZDdcYdVk8AoCt56
4bX50H7jrtmInNDaA4M1HGItArEWjVi7jFgrslm/jFiPRqyHI9YfGYADNu4Y
btw133zosPXci/HSn1UezW5I4bRnwflU91OI/BzqfsIh3OO0X2M3JLAqwieU
PhlTOLSe5bCcarUQYz4dbkH4RqTla1GSn1OLn2t1gEuAuJKPhJyWGkoLpQhE
IM/kvfvGe3JlPtiWxLOn4NV4T5vpdlbiutuu9FCfDA2VjU+2TM4QpmZJ49Od
g+ON5IHSVsqz8vasnNpkSytMevYlQ5/Pom4nIY1Oh2TeljAIQGmHqOuER2aV
XbxdJW0ao2cYY+r3p/QXDYq28bcL6x6U1DyrrMytLX3ZWFTcUlDallfWnlvW
nlfcml/YVJhXV/y8suxhaaWSfYyibezVF3Xgvcbef5IxvXzxdqXOmT/irr+S
MMBdOP7HoIz7EoZnw26m6Z//LOXZZevQz2xtXUtaMhtJj0j9hf3jdeMzHVPz
pOl50sRsx8h4bV9fHplws6vhclux944kngSSmH/sg0cme16avOcBS6KMlpqy
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
/TAR7ZxV7oUmBeLqwvGNcSRaMomeQqQlVlGjSykhBQS/9DL3uEInOcsT/klO
njEebpEBgsJG1yQtgxIKYzKrsjD176PFdgHy2wBp/jMAZGp8ltE31kzvJ5La
i4obU7MpCK4LcqZfS8A8QhPxMRmk9KI6NJS7r5PWNtDDGB+dmJ2bX1pZXYfG
r+zShj+HMBviWOMe1xYWliYmpxkDIy3tPeT6llJ8XTaGmJBdrmD+VXB8sYzJ
V3L/n733fqvqTNfH/4bv55czcyYWwMSYMudkorFGjRUVG4I9yfQkxtgRUQQU
UIqigkqV3svund17Zffe2L1vNmw6Juf7rg2oKXMmyeRMRHiu9+La7LLWu+57
3c96nreeW7YutagdJcBRFGyBQaFxWG3+6TG042MT00uhvswC+Z9nQz2hZbEn
QC4UCkYcscE/fJGRQFG0I4RrDhUVV1F2fZaw429QufGYCDKL8g5OK7YPx9KC
jENj9tq9A8HIyPAoNAJoDqnkm9jgrqmnT0fHpyeRRYw2n1jdT+Zru0mSJz3s
pKT8W5X4xM8Sdv4tHiCw98tlq5MLm+ECDFnOmpt0z6ZSTyfHJ0aio+FgxOnw
a3UOgchIpMo7UNy1KXn36mBJX0JbP+869bvbT27uP/eb5LTfFH75/5pwOZ3k
W3DGXTS7FMd9jOOWYzmP0Kz7MFpxOymv5Mz/u33q/0u+9Jvihuykr/7zVvWD
pNOLD5yNW5NyswXJwlCkcxSxBYH8rwLJmxZIdin6FRaILiYQEk3ZjRatT73z
uJGefOb15LOvp158vb6H3YUTEphyjkSn0PWbbR6PPzQwGIWW5JhY2Cr71beZ
1RimpkbHxgeHhv2BkM3h1ujNgj4VmSVq2rniSHLe4YsJyecS7tdiDp5JOLA3
f/3RYhheDE1Alln0Jo/LHQ4PREdGYnN150hOMe0VY9tvQYN/vN6w2eyRyq00
tgaG71t3+G7Snlt7vliWXYoD2cS2HTm3qnv37r1djxAgqAq6yCTVOc2OoDcU
HRwem+munBOX/UIONTw6HoxE7Z6Q2uziykw4lqIVx09Ne333nhu7TyUkfhZ/
4yFqzxcJSbuhfvlurJjMVIukc5Xu/5mle/wZ3RaPVGGlcdRwgnD9kYJ9e6/v
Pb00v7Iyt6JkR+LHBbVZB87/x6G0/zic8ZuUlGMnsn/bSiw4evRPn9z8XRup
6MiRTw+nnjx67TepV0Bo8R979h7ee+a3e07/5+2ah/vPLNm3N2P9kbwePI/M
Ui4I5NUUyBfx80QgdI4WSZBuOHr3wL7bB88su1fb+6CefGBffgOMBSMKetly
vlSvMvRbHV5fMBwZinVRTM4hthfsJxs0PDgWVI9PTESHRwDtDrdPb+oXy7U0
rgRFYn94LL+qDZt8Nr7kCfLAV/EfHLx5b/Pyqm0rsBQpW6BTqO2xoDoCBdXj
UFD9zdcvdSvcC/bNdAPs5MTk8OwyFCqtgyM0YimKim1vrT5U+P6+/MRYJpVV
hvnvvTdXHrxV2c3pIPQRuVqBsl9r9Tl8kdAgtHbNXFHJM7rHYjmUJxgxOXxS
XT9NpIVTJfVI1geH8gtqMLs+j895iNj1Wfz7+24UbVpevnUFuhekzK8i3SID
lioF9/OalJsrD2Qkfbl416nXcisK3tt38g8Hjt5pvHq/9eq+A0dSrvwmNeO3
Jdt+d/DQx4czfgte7z94rKwj817LtfeTj4AAY8/p396qvju9eWXJ5tcrt72J
oYhYAq1CY3vVEFsQyLwRiFrr4IqMOKqiettba1OLVh28tf+rZfu/SnjQQFyT
kr/hWBGiV0DhyUUKvdZst7t9AShqgLoo5lKMuGA/0WZX9pgCTA8MRt3+kMnm
kmmMLKEcS+UdS8lfl3oj+Vz83RrYvtNxK/dnFW58o66L1o0T9DIVQqlJZ3Q5
3aHnQfXculFmR3GATCoSGXZ7wgazRySz9rI0nVhxVQd7z+68XV8k7Px7/PUy
VOLnCX/Yn7s6paARLUDRFUyJSW5wWVwhXzg6NDw+rZKX/9pnc6inIIcKRYYd
3rDG4uIrTQSuooPIX3vk9srkm3u+jL/xCAbSqPf2ZuV9+EZ1O60TIyAxFMK+
V5FuuaWXrerG8590kfcmXUs6DXVP3HhckvjFf/733pM7dh29XXe9qCGruCn7
TsuNuy0377bk3mm5eaf5BninsD5r5+6j7+0/vuvL3+ZWFu758rX3958t2JRQ
24XrxrF6mTKh1PgKIrYgkHklEJmVzNJ04yW1XZx9SfkgYNh7OqG4BnvwXMLa
1PyjKbfRVAFDqOjTGI39TpcvGB6E2hrmTIy4YD/RZoNqaH1UwLQ/FOl3+VTG
fp5UQ2SJuvCM2m7Cvr2Zd2p6Ciq79p6CYobyZmITjIkiiRk8jUxltfR7ff6B
oaGR2Z67OXaTTA/kGIcWUB31BwYtNr9cbWfw9QiSrL6Huyr59nt7b2Y/RGeW
Ind+Fr8jMbukibz2aHFnbx+JrxOqbbp+v9M/+HxO2cutkpl9xwDdIIcaHvWG
Bs1Ov0xvY0i0SLqkAc1anZq3a3fWzQpYzqOeXZ/Hvb8vu6yR1NDDRBJfXbo1
doZAhySLG+H01Ydy3t+fnlvxJPvRwx2f/W7Ljk+zHufmVNy8UXUz8fRvd0Hl
P6cL+HfbrpM5lTezK3K37vw4+3HhjfJ7e04tWnng0uMWeBO8F9XLZ/BUryZi
CwKZdwLRI3tljXDe6kMFK/fn3q5E36pE7j0dv3dvdk13bweehWeJOVKN0mC1
Or2+UGQwutDU8MpaLKj+JhZUT4QGh52+sN7qFqtMVL4cTuYdv7rsUSvmTi1s
z6m4PV/EJZ2Ky/vw9aq23nYUB0+T8sR6jd7ucAZCIWjRksmJyTnTc/eCfTO7
swbIC0LhqMMVUhtcXIkZS1O2oASPWum7dt0ECcWOv8Xv+Ht8Tjm6oJZwKO31
JqwAzVSypGa50W1xhX3h4cHh8eedti8lBtMju54+hfbpi45OBCPDdiiH8vCV
ZiJP2UESHM54vaQJl1+NSPw8budncbu+iL+x4fXyFnIrkoOnxujWOeyvHN0a
QHefCUeXt6I5Fe3E3buv7jq1ZOdni7f97bWMByUZD4q3/e0/N2//4+Ydf3p3
z19AeWfPX7Z99jvwAryz7e//mVFadLX0zo6/v7bzs0V7Ti3J/TChqh3Tjqbj
aWKeWLcgkPkmkFePbk2Mbhxd2YoWVrTR9+y+sedUPLj23afiip4gy1pwxzKW
9fRyyXyZUGXUWp0ObzAYgRalGJ+cq8t5Ldg/sumgenLq69FxaN0Sb2jI4gzI
DXZWnw7DkLRiWamXl92tR+ZXdu8CAvks7nYlbNWBnJoOaheWR2YpxDKTwexy
e0KRSGwO8tTUNy//8OAfMnBXx7b8hnbjcvsiBotXpOgnsTUdOHFlB+v9A3k3
yjHXShHb/hZ//REyrxp74MKyGjiniyzt5euFajvIpBy+wdDg6PBobFrVr7Nh
3T+xb2bjQ2jKeWyDCXcQ2tu3T+egS/QIurQBw0lOW1ZQh7lRAd/xWVzWw+7d
p+JXHrhR3Q7o5pOZMbpNryrd1l62uhMvqO6irjyYnVfRcb2sYetfFqeVPLp0
t3TzX157K/GzU6sXv5X4+YV7ZefvlYEXsX8/Ax9dLClNK3m47a+Ldv59cX5l
y6qDmU86id04DpklE8uMCwJ5VQUCYoa8CsR3BfJK092JE1d1slYezMuvROc8
gicCBCphxXWo1LRlzRgmmi5mSDRSnc3k8HmCkYHo6MLuVa+YPVtbfnzyaSyo
HrF7BzQWr0BpJfHUXb3CdccKDl5I2HM6PudRd1ZZZyIUMyD37skp2/ImnCCi
c9WzDXERqCFufOLpnN30dgaHCWh/N19gyGwLSNV2Kl/fQ5I+2LJiT1L+rlMJ
II3KeAC/WorY+UVC0pllqw8XNeFEaKaaKbXIDG6zM+QNRUHc9cIuNC8RFi/6
Q+DMQMYH8j6rO6w0e7gKK56raSeK1xwt2n9+2a4vgduHXSvt3vn3uPwKVNKe
G6XP6Fa+ynTT+DoYSVK6ZUVS0g0QLO3429LLJQ0Xip9s+uPijX9ctGLHV6C8
ueOr00VVp4uq1310+s3Yv+CjTX9cdOFOdXpJLfjJrcquvUlZD7csRxAFdK5q
QSCvqkAygUA+mxHIfPOHSUl5e04l7PwsPrOsJ/tRz54v4w+cT1h7tKCDKCBw
lTyFWW122zzhwMBwDIaXumVpwX6Szc6vhOYgD0DDgwdNjoBU56RLjEi6fMOJ
ktWpBe8fuJn4RXxmaU/mg+6t268mnYpfnZy34WgRulfCFuhUWpvN4Q8GB4dj
+cMcmIP8jwxqb4Ga44ZHxgPhaL8zpNC5mCITkqJYf6xkVXJBXiVhy/asK/cR
oGz/LP6/9+WuPFSw7lhJZ6+cyNfzVXa1xWfzDEzLJNYA+xKtajLrD2Mb2E1M
gRoGQHzoi2j7/SKNgyI0wqjQMjUfpBS8dyB35+fxV0vhVx/Atm6/lnQq4YPk
/A1Hi+cH3UYkRb7+2N0Pkm/lV2K2bM9Iu9t2vrB54ydL3tx2AZTl2y6cut2w
fNtFUE7dblweewe8/+EnS84XNV6+27Jle3pMILmzAtG+6ojNc4FkzjOBPKP7
9q1KPLh8AMK1UhgA5A/7cz5IubX+xF0ETUoT6SVau8HudwUi4SFovszE7DYU
v/ZVLdi/ZDOrPkLzKyeHRsYCA1EbNAfZw1NYCVxtB7GvCsa520TZnpiTWYbc
vO3q1Xuw/9qdlb3+jcdNlFY4F0+R8cUGrd7hdAXD4ejoyNjUZKwhbs7adHPc
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
rDaxWksTStCIPQmfHDnXiqg4krYo+dxruxK/yFi75Pe7zlwpqX1n56WzHyRc
vwd7b0/OqgP561OL4fg+BlcnV0FbvsY0MjbxamgE5CBAI6NjkYEhtyug1zuE
Ij2RLG2HcdccvL0y6cbNB4iLHyS8uzPt3Z0X3t11duv2r26WV+45vWjvmcVJ
e8+tTk1be/RaIxoHvCKayacI5Fw5NHhYZ/VYXUF3IBIYiA5ER6Ojs45x6uvn
KdXPcozfTp2gnfjGALujE5HoaGBgGJyx3x0EZwd14MoNFIEC+MNOIr0RhV97
JHPf/rSSxjpQ8z1fLtq+88u0NUvBFV25W/cdutfNU7pvvZ9048YDxIUPEt7Z
mfYOoDvx7JZtp7MelO/82yJQtm774uLqpe8mnkm/U/v2josLApm3Almge5ru
3+86u23H6dtV5QfOLkq5tCgl+UzNzvgtf77GkBAlWo7eJnf4zcFBb3Q0Mj45
+vTryYXuiZfeZkYyQA1y45HosDcYNrs8cpOFpVDjeKJOCrP+rzmLPsl87Vj6
78pbSg6efW3v6dcy1i3JKqv6/a7zv9+Vll3WvTMx6359b20XG0boo3P1Mmib
+IA/OBQdhpb6ekU0Mr0J7EDU7QrGNGIgUmTtcG5lE2Xlvpz8h7CcB+2/33Ux
u/RJ+tqle04tSjq9aP/ZRSWNjw9eXHwobUlFd+u6Y5knshKAV0TReSSelNWn
FanNSpPDaPfaPEFPMBKMRCOzjnG6MRZ4s6fTA4NivvGfCimWN0Gb6cx2y0LO
EBwNcobDY8HIsCc4aI9lTyqTU6y2svp0vTw5is7vJNEPp+aAGlZ2taVcWpJ8
YfGBc4vu1D0EXINrSV+3NKusepburm/TrZsXdIu/RXfeQ1h2jO6s0lpA9+4v
FiWdgnRRWF2a9GUMsbVLs0r/EWILAlkQyNy2n0R3xrqlSV8u2n/mteSLr1V2
lR3PXPTpjcUYZitNjBRqKBqrsN+r9Q/YB0eCYxPRqafjC90TL7nFgm0gvfGJ
yejIWCAyZPcFtTaXUGcmS1WIsyVLKexqLOVhD/5+K6qkrqfkcNrvyppK95+B
JJ9b8eRmeeP2nel/2Jd1e9Py2h42jNhH4+mlaoflldPI9MbxAwNRlyuoMzgF
4CFClXYgOfc2LV+1PycxMSP/ceuOneeTTi0uelJ5r6G8rOXRo/aH5Z2PU9MX
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
Gurmft6+9DJ2S80gNvU01go3HhqIIWYLKvQenswG8uiP/li+8WTZE7jgcQdr
1aHbNza+UVCP/RmIFTVgb9fiMze88d7+/Lwaam4V7b/3Fvw+6da1MuK5Na9n
lMK27Ei/Wdlc3NCYmr6khdAGjdyWExUmttklcwcN0Hrsw56hUf/giDc0ZPeE
jBa3XGnmcRVkPAfVTuw8nL70bmPL9sS0i2sT3t2VCY55rZT4+z23wFlyq6j5
NZT39ueBs9+qxRbU/ZzKP6O7rI1V1T1DN4GlZ0msUo3LMEv30ALd814ghRBi
qGeIHY0h1kXBIhl4DJuAZRPQ30Fs/4sCWT4XBTKf6f5XBAIeQCsPFTxsZ1fD
BBtOlm3+YzmRY+T09cu0bmN/wOmJQIgNjy/0UPwfGUDz69k2pdjCW6PeQBRE
a1qzX6J2sfv6e7kmNF3bRVI2Y/qewIXlnZzSVvqevXmAdyDYO01oQPqhy/GV
cOSxTMA7spWIbCOhWgnIJizq2LX41CvxH6Rm32vB3m3C3W0kgh8+aKE/6uBU
9wgaUJJ2vBxBURPZBqbIIlLYQWhtsQc9vkh4YHh4eHz8pZTJM4FAS1iMjA9E
Rrz+QZAya00+icrJlgDEjCiapouoaIIQEwDEHnwPsYedyB9CDPkCYhiA2B2A
WFJeSRP9XjPrXjOnpJlb3MC5XcvMraJkl+OzHiOzK7p2n166/8LSSlhrO6mL
wMfwVTRNv8ju0wYisX3fJgZA4D86EYmO+kODDqffoLdJRRpWr4DY1YuogXce
uLB0z+ml2eU91x+hsh7jb1aSbz9hFNezS5o495vZ95qZJU203Um5P51uPFT5
vfn3WxiA7qoeQT1K0oaXwylqAsvAED6n2z0P6F4QyI9ADLrHimcRe9SJqIIj
jkOIIdqIiHYS8nsCmbnHdiflPxdI0xwSyDyn+8f4wx9ELP9BK+RSqmHCBnRf
B0GBoGqIbCNTbBUrHWqj12IPefyDYaiHAurTefkAm/P2zfQy0ZPTcyXGfKGo
zT2gtwZAzMaX2xkiK4gZsEw9kqrp7lW24WUNKHENjLc6tWjvvvyVh/KAbG9u
ej1p3/XktPjybviRjLij1+JqUTDwtwoGL+9C7Nt//UErdtWh3FWH8j9IKQA/
rO7h1SPFLVhpJ1EBniAYuhZohCYw8/r6pWqn1uTtdwTBXQfuvZGZjrzY/m4v
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
K47r0nbvzlbtd9YPL9ujHUBk/6G5dwoVe6SguQm5K3p0XTl3Q9+6W7V7d4W7
dx8SaO6dQsUeKWhuQu7KRpudtaTiy9y9+9BBc+8UKvZIQXMTsk02yitOHlpo
7p1CxR4paG5CCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEELL//P+HLK/K
    "], {{0, 700}, {700, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{477., Automatic},
  ImageSizeRaw->{700, 700},
  PlotRange->{{0, 700}, {0, 700}}]], "Output",
 CellChangeTimes->{{3.737456661970236*^9, 3.737456683351036*^9}, 
   3.737456869263836*^9, 
   3.7377887098900485`*^9},ExpressionUUID->"95eda530-0051-4a17-baba-\
7a2410522769"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tstep", "=", "0.01"}], ";", 
   RowBox[{"Filme1", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"t1step", "=", "tstep"}], ";", 
   RowBox[{"pixelsize", "=", "700"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pto", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"IETwist", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"x", "*", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"P", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pto1", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"IETwist", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"x", "*", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"P", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pto2", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"IETwist", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"x", "*", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"P", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pto3", "=", 
   RowBox[{"Fold", "[", 
    RowBox[{"IETwist", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"x", "*", 
        RowBox[{"Tan", "[", 
         RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"P", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Filme1a", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"Filme1b", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"Filme1c", "=", 
    RowBox[{"{", "}"}]}], ";", 
   RowBox[{"Filme1d", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"t1", "=", "0"}], ",", 
     RowBox[{"t1", "\[LessEqual]", "3"}], ",", 
     RowBox[{"t1", "+=", "t1step"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{"Black", ",", "\[IndentingNewLine]", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", 
                 RowBox[{"2", "*", 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
             "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", 
                 RowBox[{"2", "*", 
                  RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
             "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.3", ",", 
                 RowBox[{"0.3", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}]}], 
              "}"}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Hue", "[", 
            RowBox[{"0.5", ",", "0.5", ",", "0.8"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Lambda]", ",", 
                RowBox[{"-", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Lambda]", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", "P3", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Hue", "[", 
            RowBox[{"0.1", ",", "0.5", ",", "0.8"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "2"}], ",", 
                  RowBox[{"2", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Lambda]", "*", 
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"t1", "-", "2"}]}], "]"}]}], ",", "0"}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", "P0", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Hue", "[", 
            RowBox[{"0.2", ",", "0.5", ",", "0.8"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"2", ",", 
                  RowBox[{"2", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"t1", "-", "2"}]}], "]"}]}], ",", "0"}], "}"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Hue", "[", 
            RowBox[{"0.0", ",", "0.5", ",", "0.8"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "\[IndentingNewLine]",
            
           RowBox[{"(*", "P2", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "2"}], ",", 
                    RowBox[{"2", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".3", ",", 
                    RowBox[{".3", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}]}], 
                 "}"}], "]"}], ",", 
               RowBox[{
                RowBox[{"-", "\[Alpha]"}], "*", 
                RowBox[{"Min", "[", 
                 RowBox[{"t1", ",", "1"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Gamma]"}], " ", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"t1", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], 
               ",", "0"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", "P1", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Hue", "[", 
            RowBox[{"0.6", ",", "0.5", ",", "0.8"}], "]"}], ",", 
           RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
           RowBox[{"EdgeForm", "[", "Thin", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{".3", ",", 
                    RowBox[{".3", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}]}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", 
                    RowBox[{"2", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]}], "}"}]}], "}"}], 
                "]"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "-", "\[Alpha]", "-", 
                  RowBox[{"2", "\[Beta]"}]}], ")"}], "*", 
                RowBox[{"Min", "[", 
                 RowBox[{"t1", ",", "1"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Gamma]"}], " ", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"t1", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], 
               ",", "0"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"x", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
               "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Filme1", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme1", ",", "frame"}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"framea", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", 
            RowBox[{"1", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Point", "[", "pto", "]"}], ",", 
               RowBox[{
                RowBox[{"-", "\[Alpha]"}], "*", 
                RowBox[{"Min", "[", 
                 RowBox[{"t1", ",", "1"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Gamma]"}], " ", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"t1", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], 
               ",", "0"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"x", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
               "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme1a", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme1a", ",", "framea"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"frameb", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", 
            RowBox[{"1", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Point", "[", "pto1", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Lambda]", "*", 
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"t1", "-", "2"}]}], "]"}]}], ",", "0"}], "}"}]}], 
            "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"x", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
               "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme1b", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme1b", ",", "frameb"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"framec", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", 
            RowBox[{"1", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Point", "[", "pto2", "]"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "-", "\[Alpha]", "-", 
                  RowBox[{"2", "\[Beta]"}]}], ")"}], "*", 
                RowBox[{"Min", "[", 
                 RowBox[{"t1", ",", "1"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "\[Gamma]"}], " ", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"0", ",", 
                    RowBox[{"t1", "-", "1"}]}], "]"}], ",", "1"}], "]"}]}], 
               ",", "0"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"x", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
               "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme1c", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme1c", ",", "framec"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"framed", "=", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PointSize", "[", 
            RowBox[{"1", "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Translate", "[", 
            RowBox[{
             RowBox[{"Point", "[", "pto3", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Lambda]", "*", 
                RowBox[{"Max", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"t1", "-", "2"}]}], "]"}]}], ",", "0"}], "}"}]}], 
            "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"x", "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"x", "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", 
                  RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
               "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "*", 
                  RowBox[{"Tan", "[", 
                   RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme1d", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme1d", ",", "framed"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold1", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme1", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tholdinv1", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invFilme1", "=", 
   RowBox[{"Reverse", "[", "Filme1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdinvFilme1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"invFilme1", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "tholdinv1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lFilme1", "=", 
    RowBox[{"Length", "[", "Filme1", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t2step", "=", "tstep"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Filme2", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"t2", "=", "0"}], ",", 
     RowBox[{"t2", "\[LessEqual]", "1"}], ",", 
     RowBox[{"t2", "+=", "t2step"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Filme1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "t2", "]"}], ",", 
             RowBox[{"PointSize", "[", 
              RowBox[{"t2", "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "2"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Point", "[", "pto", "]"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"x", "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"x", "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                 "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                 "]"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Filme2", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme2", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold2", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme2", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold2"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "st", " ", "iterate"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Filme3", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t3step", "=", 
    RowBox[{"3", "tstep"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"2", "lFilme1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "lFilme1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Filme1", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"invFilme1", "[", 
             RowBox[{"[", 
              RowBox[{"k", "-", "lFilme1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme3", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme3", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold3", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme3", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme3", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold3"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Filme4", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t4step", "=", 
    RowBox[{"3", "tstep"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"2", "lFilme1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "lFilme1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Filme1", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"invFilme1", "[", 
             RowBox[{"[", 
              RowBox[{"k", "-", "lFilme1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme4", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme4", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold4", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme4", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme4", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Filme5", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t5step", "=", 
    RowBox[{"3", "tstep"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"2", "lFilme1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "lFilme1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Filme1", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1c", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"invFilme1", "[", 
             RowBox[{"[", 
              RowBox[{"k", "-", "lFilme1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1c", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme5", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme5", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold5", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme5", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme5", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold5"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Filme6", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t6step", "=", 
    RowBox[{"3", "tstep"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", 
      RowBox[{"2", "lFilme1"}]}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[LessEqual]", "lFilme1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Filme1", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1d", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"Filme1c", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"frame", "=", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"invFilme1", "[", 
             RowBox[{"[", 
              RowBox[{"k", "-", "lFilme1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1d", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1c", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1b", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Filme1a", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme6", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme6", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold6", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme6", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme6", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold6"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Filme7", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nfram7", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numiter", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pntos", "=", 
    RowBox[{"{", 
     RowBox[{"pto", ",", "pto1", ",", "pto2", ",", "pto3"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"k", "=", "1"}], ",", 
     RowBox[{"k", "\[LessEqual]", "numiter"}], ",", 
     RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Filme1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", 
              RowBox[{"1", "*", 
               RowBox[{"10", "^", 
                RowBox[{"-", "2"}]}]}], "]"}], ",", 
             RowBox[{"Point", "[", "Pntos", "]"}]}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"x", "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"x", "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                 "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                 "]"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tabframe", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"frame", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nfram7"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme7", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"Filme7", ",", "tabframe"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Pntos", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Pntos", ",", 
         RowBox[{"IETwist", "[", 
          RowBox[{
           RowBox[{"Pntos", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], ",", "P"}], "]"}]}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold7", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme7", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme7", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold7"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t8step", "=", 
    RowBox[{"tstep", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Filme8", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"t8", "=", 
      RowBox[{"10", "^", 
       RowBox[{"-", "1"}]}]}], ",", 
     RowBox[{"t8", "\[LessEqual]", "1"}], ",", 
     RowBox[{"t8", "+=", "t8step"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Imag1", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Filme1", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Disk", "[", 
               RowBox[{
                RowBox[{"Pntos", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"t8", "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "3.5"}], ")"}]}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "t8"}], ")"}], "*", 
                  RowBox[{"10", "^", 
                   RowBox[{"(", 
                    RowBox[{"-", "2"}], ")"}]}]}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", 
                RowBox[{"Length", "[", "Pntos", "]"}]}], "}"}]}], "]"}], 
            "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"x", "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"x", "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", 
                    RowBox[{"(", "x0", ")"}]}]}], ",", "\[Lambda]"}], "]"}]}],
                "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "0"}], 
                 "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"x", "*", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", "0"}], "]"}], "*", "x0"}]}], ",", "1"}], 
                 "]"}]}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"pixelsize", ",", "pixelsize"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"frame", "=", 
       RowBox[{"ImageMultiply", "[", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"Imag", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", "t8"}], "-", "1"}], ">", "100"}], ",", 
                 "100", ",", 
                 RowBox[{
                  RowBox[{"1", "/", "t8"}], "-", "1"}]}], "]"}], ",", "0"}], 
              "]"}]}], "}"}]}], "]"}], ",", "Imag1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme8", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme8", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold8", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme8", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Filme8", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold8"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t9step", "=", 
    RowBox[{"tstep", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Filme9", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"t9", "=", 
      RowBox[{"10", "^", 
       RowBox[{"-", "1"}]}]}], ",", 
     RowBox[{"t9", "\[LessEqual]", "1"}], ",", 
     RowBox[{"t9", "+=", "t9step"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"frame", "=", 
       RowBox[{"ImageMultiply", "[", 
        RowBox[{"Imag", ",", 
         RowBox[{"ImageAdjust", "[", 
          RowBox[{
           RowBox[{"Filme1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "t9"}], ")"}]}], "-", "1"}], ">", 
                  "100"}], ",", "100", ",", 
                 RowBox[{
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "t9"}], ")"}]}], "-", "1"}]}], "]"}], 
               ",", "0"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Filme9", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"Filme9", ",", "frame"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thold9", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"holdFilme9", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"Imag", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "thold9"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FilmeFinal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "Filme1", ",", "holdFilme1", ",", "invFilme1", ",", "holdinvFilme1", ",", 
     "Filme2", ",", "holdFilme2", ",", "Filme3", ",", "holdFilme3", ",", 
     "Filme4", ",", "holdFilme4", ",", "Filme5", ",", "holdFilme5", ",", 
     "Filme6", ",", "holdFilme6", ",", "Filme7", ",", "holdFilme7", ",", 
     "Filme8", ",", "holdFilme8", ",", "Filme9", ",", "holdFilme9"}], "]"}]}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737449200752185*^9, 3.7374492969125853`*^9}, {
   3.737449404679385*^9, 3.737449425662385*^9}, {3.737449461997785*^9, 
   3.737449637558985*^9}, {3.7374496887889853`*^9, 3.7374497500355854`*^9}, {
   3.7374498708439856`*^9, 3.737449991094785*^9}, {3.7374502181311855`*^9, 
   3.7374502244803853`*^9}, {3.737450264059985*^9, 3.7374503325491853`*^9}, {
   3.7374503913059855`*^9, 3.7374503914775853`*^9}, {3.737450448111785*^9, 
   3.737450547331785*^9}, {3.737450592608985*^9, 3.737450593716585*^9}, {
   3.7374508101765738`*^9, 3.737450810488566*^9}, {3.7374508800637817`*^9, 
   3.7374508834352956`*^9}, {3.7374509346809816`*^9, 3.737450992978687*^9}, {
   3.7374510355406446`*^9, 3.737451070254199*^9}, {3.7374511343577776`*^9, 
   3.737451165418979*^9}, {3.7374512815778904`*^9, 3.7374513111263123`*^9}, {
   3.7374514247078476`*^9, 3.7374515443110476`*^9}, {3.737451628323848*^9, 
   3.7374517904198475`*^9}, {3.7374518615014477`*^9, 
   3.7374519120856476`*^9}, {3.737451960577448*^9, 3.7374519954318476`*^9}, {
   3.7374520952380476`*^9, 3.7374520980616474`*^9}, {3.7374521304346476`*^9, 
   3.7374521818914475`*^9}, {3.7374522153242474`*^9, 
   3.7374522417974477`*^9}, {3.7374522726832476`*^9, 
   3.7374523147428474`*^9}, {3.7374524698958473`*^9, 
   3.7374524882258472`*^9}, {3.7374531949970474`*^9, 
   3.7374532586292477`*^9}, {3.7374533378214474`*^9, 3.7374533596552477`*^9}, 
   3.7374536508570476`*^9, {3.737453689314048*^9, 3.7374536946648474`*^9}, {
   3.7374537530420475`*^9, 3.7374537565052476`*^9}, {3.7374538542306476`*^9, 
   3.7374540075780478`*^9}, {3.737454046304248*^9, 3.7374540695814476`*^9}, {
   3.7374541102204475`*^9, 3.7374542201092477`*^9}, {3.7374549584632673`*^9, 
   3.737454974734025*^9}, {3.737455041640136*^9, 3.737455186082121*^9}, {
   3.7374553691524267`*^9, 3.7374553708215837`*^9}, {3.737455435583375*^9, 
   3.7374555075079136`*^9}, {3.737455749073836*^9, 3.737455790804836*^9}, {
   3.7374558302612357`*^9, 3.737455879077636*^9}, {3.737455924841236*^9, 
   3.737455930800436*^9}, {3.7374559645930357`*^9, 3.737455976246236*^9}, {
   3.737456006261636*^9, 3.7374561535950356`*^9}, {3.7374562313962355`*^9, 
   3.7374562896162357`*^9}, {3.737456365016236*^9, 3.7374563884006357`*^9}, {
   3.7374564735318356`*^9, 3.737456473812636*^9}, {3.737456931514836*^9, 
   3.737456950129636*^9}, {3.737456993951636*^9, 3.737456997882836*^9}, {
   3.737457164113836*^9, 3.7374571710256357`*^9}, {3.7374572696996355`*^9, 
   3.7374573238492355`*^9}, {3.737457363258836*^9, 3.737457385613636*^9}, {
   3.737457424414836*^9, 3.737457479563836*^9}, {3.737457526721036*^9, 
   3.737457529809836*^9}, {3.7374575756182356`*^9, 3.7374575783794355`*^9}, 
   3.737457636167236*^9, 3.737457720170036*^9, {3.7374583620326357`*^9, 
   3.7374584270086355`*^9}, {3.7374584592714357`*^9, 3.737458501410036*^9}, {
   3.737458774768036*^9, 3.7374588157980356`*^9}, {3.737458849060236*^9, 
   3.737458855315836*^9}, {3.7374588918056355`*^9, 3.737458913380436*^9}, {
   3.7374590251280584`*^9, 3.7374590267815733`*^9}, {3.737459073079999*^9, 
   3.7374590784939213`*^9}, {3.7374591521231456`*^9, 
   3.7374591605311146`*^9}, {3.737459242899493*^9, 3.737459242961892*^9}, {
   3.7374593664975157`*^9, 3.7374594429908447`*^9}, {3.7374595487709255`*^9, 
   3.737459621572855*^9}, {3.7374596563792315`*^9, 3.737459657798823*^9}, 
   3.737459761387159*^9, {3.7374598447531567`*^9, 3.737459844987157*^9}, {
   3.737459903504757*^9, 3.737459925625557*^9}, {3.7374599691993566`*^9, 
   3.7374600628933563`*^9}, {3.7374600965611563`*^9, 3.737460117777157*^9}, {
   3.7374602791523566`*^9, 3.7374603009163566`*^9}, {3.737789120415715*^9, 
   3.737789150779315*^9}},ExpressionUUID->"6c591bb9-8428-4f1c-81da-\
ae336d28b625"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"st1", "=", "\"\<0\>\""}], ";", 
   RowBox[{"st2", "=", "\"\<00\>\""}], ";", 
   RowBox[{"st3", "=", "\"\<000\>\""}], ";", 
   RowBox[{"st4", "=", "\"\<0000\>\""}], ";", 
   RowBox[{"st5", "=", "\"\<00000\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FilmeFinal", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "Filme1", ",", "holdFilme1", ",", "invFilme1", ",", "holdinvFilme1"}], 
    "]"}]}], ";", 
  RowBox[{"lFilmeFinal", "=", 
   RowBox[{"Length", "@", "FilmeFinal"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "lFilmeFinal"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lkcount", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"IntegerDigits", "[", "k", "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"lkcount", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"st5", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}]}], ";"}], ",", 
       RowBox[{"lkcount", "\[Equal]", "2"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"st4", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}]}], ";"}], ",", 
       RowBox[{"lkcount", "\[Equal]", "3"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"st3", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}]}], ";"}], ",", 
       RowBox[{"lkcount", "\[Equal]", "4"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"st2", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}]}], ";"}], ",", 
       RowBox[{"lkcount", "\[Equal]", "5"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"st1", "<>", 
          RowBox[{"ToString", "[", "k", "]"}]}]}], ";"}], ",", 
       RowBox[{"lkcount", "\[Equal]", "6"}], ",", 
       RowBox[{
        RowBox[{"kstring", "=", 
         RowBox[{"ToString", "[", "k", "]"}]}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<U:\\\\PWIZoomframespt1\\\\000frame\>\"", "<>", "kstring", "<>", 
        "\"\<.png\>\""}], ",", 
       RowBox[{"FilmeFinal", "[", 
        RowBox[{"[", "k", "]"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.737460395525757*^9, 3.7374604359005566`*^9}, {
  3.7374605423131566`*^9, 3.7374606047317567`*^9}, {3.7374606553547564`*^9, 
  3.737460656415557*^9}, {3.7374606867907567`*^9, 3.7374608593877563`*^9}, {
  3.7374608910585566`*^9, 3.7374609180329566`*^9}, {3.737460950140957*^9, 
  3.7374609502033567`*^9}, {3.7374609820911565`*^9, 3.7374610080495567`*^9}, {
  3.737786812522024*^9, 3.7377868155182047`*^9}, {3.737789834972568*^9, 
  3.7377898676230593`*^9}},ExpressionUUID->"91e61b5d-7bcf-45d5-a40c-\
fcff607bfc6e"],

Cell[BoxData["FilmeFinal"], "Input",
 CellChangeTimes->{{3.737453284356848*^9, 
  3.7374532869620476`*^9}},ExpressionUUID->"df06308c-734e-4cbc-aa18-\
f129041e27f5"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"FilmeFinal", "[", 
    RowBox[{"[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", 
     RowBox[{"Length", "[", "FilmeFinal", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.737449307801385*^9, 3.737449336411785*^9}, {
  3.7374503710259852`*^9, 
  3.7374503740679855`*^9}},ExpressionUUID->"647ad870-f551-47c1-9b17-\
a986cea34e4b"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<PWI2a.avi\>\"", ",", 
   RowBox[{"Join", "[", 
    RowBox[{
    "Filme1", ",", "holdFilme1", ",", "invFilme1", ",", "holdinvFilme1", ",", 
     "Filme2", ",", "holdFilme2", ",", "Filme3", ",", "holdFilme3", ",", 
     "Filme4", ",", "holdFilme4", ",", "Filme5", ",", "holdFilme5", ",", 
     "Filme6", ",", "holdFilme6", ",", "Filme7", ",", "holdFilme7"}], "]"}], 
   ",", 
   RowBox[{"Antialiasing", "\[Rule]", "True"}], ",", 
   RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7376939871576357`*^9, 3.737693998155636*^9}, {
   3.737694057965836*^9, 3.737694064611436*^9}, {3.737694982011777*^9, 
   3.737695026167577*^9}, {3.7376950596125765`*^9, 3.7376950653689766`*^9}, {
   3.737695179962177*^9, 3.7376951801961765`*^9}, {3.737789329286723*^9, 
   3.7377893354951253`*^9}, {3.7377895690101876`*^9, 3.737789580819085*^9}, 
   3.7377896129230614`*^9},ExpressionUUID->"31d29078-925a-4d70-afd0-\
7038fd75e0c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<PWI2b.avi\>\"", ",", 
   RowBox[{"Join", "[", 
    RowBox[{"Filme8", ",", "holdFilme8", ",", "Filme9", ",", "holdFilme9"}], 
    "]"}], ",", 
   RowBox[{"Antialiasing", "\[Rule]", "True"}], ",", 
   RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7377895971830654`*^9, 
  3.7377896067612195`*^9}},ExpressionUUID->"a763cea0-1106-4576-8293-\
4dd7000b8962"],

Cell[BoxData["\<\"PWI2b.avi\"\>"], "Output",
 CellChangeTimes->{
  3.7377899767850604`*^9},ExpressionUUID->"48a8bb56-d877-4ac5-8d4b-\
467a17f8498e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.291", "*", "3.8"}]], "Input",
 CellChangeTimes->{{3.7376971968282537`*^9, 
  3.7376972020853863`*^9}},ExpressionUUID->"e798c217-a631-4ede-bd7a-\
f66d301c584f"],

Cell[BoxData["1.1058`"], "Output",
 CellChangeTimes->{
  3.73769720261578*^9},ExpressionUUID->"d2c3e6c6-ae84-4959-b885-9e0686d0e96c"]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{1348, 859},
WindowMargins->{{144, Automatic}, {47, Automatic}},
ShowSelection->True,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 79239, 1771, 5351, "Input", "ExpressionUUID" -> \
"f58e6b33-12f3-4aa2-96e1-a65adc95a7b3"],
Cell[CellGroupData[{
Cell[79822, 1795, 1187, 33, 69, "Input", "ExpressionUUID" -> \
"fbe1aa88-5cb3-4339-bda5-b05c5e934ab3"],
Cell[81012, 1830, 203, 4, 30, "Output", "ExpressionUUID" -> \
"50d5c0da-15d4-4b17-b2f4-8acbbdd1c947"],
Cell[81218, 1836, 233722, 3837, 492, "Output", "ExpressionUUID" -> \
"95eda530-0051-4a17-baba-7a2410522769"]
}, Open  ]],
Cell[314955, 5676, 56513, 1445, 4952, "Input", "ExpressionUUID" -> \
"6c591bb9-8428-4f1c-81da-ae336d28b625"],
Cell[371471, 7123, 3083, 75, 240, "Input", "ExpressionUUID" -> \
"91e61b5d-7bcf-45d5-a40c-fcff607bfc6e"],
Cell[374557, 7200, 164, 3, 30, "Input", "ExpressionUUID" -> \
"df06308c-734e-4cbc-aa18-f129041e27f5"],
Cell[374724, 7205, 445, 12, 30, "Input", "ExpressionUUID" -> \
"647ad870-f551-47c1-9b17-a986cea34e4b"],
Cell[375172, 7219, 1031, 19, 50, "Input", "ExpressionUUID" -> \
"31d29078-925a-4d70-afd0-7038fd75e0c6"],
Cell[CellGroupData[{
Cell[376228, 7242, 474, 11, 30, "Input", "ExpressionUUID" -> \
"a763cea0-1106-4576-8293-4dd7000b8962"],
Cell[376705, 7255, 148, 3, 30, "Output", "ExpressionUUID" -> \
"48a8bb56-d877-4ac5-8d4b-467a17f8498e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376890, 7263, 185, 4, 30, "Input", "ExpressionUUID" -> \
"e798c217-a631-4ede-bd7a-f66d301c584f"],
Cell[377078, 7269, 133, 2, 30, "Output", "ExpressionUUID" -> \
"d2c3e6c6-ae84-4959-b885-9e0686d0e96c"]
}, Open  ]]
}
]
*)

